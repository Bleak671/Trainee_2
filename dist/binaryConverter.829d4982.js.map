{"version":3,"sources":["js/binaryConverter.js"],"names":["binaryConverter","BinToDec","inArray","res","i","length","Math","pow","DecToBin","input","maxRazr","module","exports"],"mappings":"AAAA,IAAIA,eAAe,GAAG;AAClBC,EAAAA,QAAQ,EAAE,kBAASC,OAAT,EAAkB;AACxB,QAAIC,GAAG,GAAG,CAAV;;AACA,SAAK,IAAIC,CAAC,GAAGF,OAAO,CAACG,MAAR,GAAiB,CAA9B,EAAiCD,CAAC,IAAI,CAAtC,EAAyCA,CAAC,EAA1C,EAA8C;AAC1C,UAAIF,OAAO,CAACA,OAAO,CAACG,MAAR,GAAiB,CAAjB,GAAqBD,CAAtB,CAAP,IAAmC,GAAvC,EACID,GAAG,IAAIG,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYH,CAAZ,CAAP;AACP;;AACD,WAAOD,GAAP;AACH,GARiB;AAUlBK,EAAAA,QAAQ,EAAE,kBAASN,OAAT,EAAkB;AACxB,QAAIO,KAAK,GAAG,CAAZ;;AACA,SAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrCK,MAAAA,KAAK,IAAIP,OAAO,CAACE,CAAD,CAAP,GAAaE,IAAI,CAACC,GAAL,CAAS,EAAT,EAAaL,OAAO,CAACG,MAAR,GAAiBD,CAAjB,GAAqB,CAAlC,CAAtB;AACH;;AAED,QAAIM,OAAO,GAAG,CAAd;;AACA,WAAOA,OAAO,GAAG,CAAV,GAAcD,KAArB,EAA4B;AACxBC,MAAAA,OAAO,IAAI,CAAX;AACH;;AAED,QAAIP,GAAG,GAAG,EAAV;;AACA,WAAOM,KAAK,IAAI,CAAhB,EAAmB;AACf,UAAIA,KAAK,GAAGC,OAAR,IAAmB,CAAvB,EAA0B;AACtBP,QAAAA,GAAG,IAAI,GAAP;AACAM,QAAAA,KAAK,IAAIC,OAAT;AACH,OAHD,MAIK;AACDP,QAAAA,GAAG,IAAI,GAAP;AACH;;AACDO,MAAAA,OAAO,IAAI,CAAX;AACH;;AACD,WAAOP,GAAP;AACH;AAjCiB,CAAtB;AAoCAQ,MAAM,CAACC,OAAP,GAAiB;AAACZ,EAAAA,eAAe,EAAfA;AAAD,CAAjB","file":"binaryConverter.829d4982.js","sourceRoot":"..","sourcesContent":["var binaryConverter = {\r\n    BinToDec: function(inArray) {\r\n        let res = 0;\r\n        for (let i = inArray.length - 1; i >= 0; i--) {\r\n            if (inArray[inArray.length - 1 - i] == '1')\r\n                res += Math.pow(2, i);\r\n        }\r\n        return res;\r\n    },\r\n\r\n    DecToBin: function(inArray) {\r\n        let input = 0;\r\n        for (let i = 0; i < inArray.length; i++) {\r\n            input += inArray[i] * Math.pow(10, inArray.length - i - 1);\r\n        }\r\n\r\n        let maxRazr = 1;\r\n        while (maxRazr * 2 < input) {\r\n            maxRazr *= 2;\r\n        }\r\n\r\n        let res = \"\";\r\n        while (input != 0) {\r\n            if (input - maxRazr >= 0) {\r\n                res += \"1\";\r\n                input -= maxRazr;\r\n            }\r\n            else {\r\n                res += \"0\";\r\n            }\r\n            maxRazr /= 2;\r\n        }\r\n        return res;\r\n    }\r\n}\r\n\r\nmodule.exports = {binaryConverter};"]}